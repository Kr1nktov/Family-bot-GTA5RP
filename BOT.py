import discord
import json
from discord.ext import commands
from discord import app_commands
from discord.ui import Button, View, Select

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='/', intents=intents)


# –í—ã–∑–æ–≤ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ json —Ñ–∞–π–ª–∞
with open("info.json", encoding="UTF-8") as my_file:
    info_json = my_file.read()
info = json.loads(info_json)
balance = info["balance"]
balance_channel_id = info["balance_channel_id"]
auto_channel_id = info["auto_channel_id"]
cars = info.get("cars", ["Vapid Predator[2762]", "Vapid Predator[2968]"])
taken_cars = info.get("taken_cars", {})
token = info["token"]


# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ json
def updatejson():
    info["balance"] = balance
    info["cars"] = cars
    info["taken_cars"] = taken_cars
    info__json = json.dumps(info)
    with open("info.json", "w", encoding="UTF-8") as my__file:
        my__file.write(info__json)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –æ—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
@bot.event
async def on_ready():
    print(f'{bot.user.name} –Ω–∞—á–∞–ª –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –µ–±–∞—Ç–æ—Ä–∏–µ–π.')
    await bot.tree.sync()  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥
    channel = bot.get_channel(auto_channel_id)
    await send_car_menu(channel)


# –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
def is_admin():
    async def predicate(interaction):
        return interaction.user.guild_permissions.administrator
    return app_commands.check(predicate)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
def in_allowed_channel_balance():
    async def predicate(interaction):
        return interaction.channel.id == balance_channel_id
    return app_commands.check(predicate)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –º–∞—à–∏–Ω
def in_allowed_channel_auto():
    async def predicate(interaction):
        return interaction.channel.id == auto_channel_id
    return app_commands.check(predicate)


# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å
@bot.tree.command(name="setbalance", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å.")
@is_admin()
@in_allowed_channel_balance()
async def setbalance(interaction: discord.Interaction, amount: int):
    global balance
    balance = amount
    updatejson()
    embed = discord.Embed(title="–ë–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
                          description=f'{interaction.user.mention} —É—Å—Ç–∞–Ω–æ–≤–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ {balance}$.',
                          color=discord.Color.purple())
    await interaction.response.send_message(embed=embed)


# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å
@bot.tree.command(name="checkbalance", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å.")
@in_allowed_channel_balance()
async def checkbalance(interaction: discord.Interaction):
    global balance
    embed = discord.Embed(title=f"–ë–∞–ª–∞–Ω—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {balance}$",
                          description=f'{interaction.user.mention} –ø—Ä–æ–≤–µ—Ä–∏–ª –±–∞–ª–∞–Ω—Å.',
                          color=discord.Color.blue())
    await interaction.response.send_message(embed=embed)


# –î–æ–±–∞–≤–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞
@bot.tree.command(name="addbalance", description="–î–æ–±–∞–≤–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –∫ –±–∞–ª–∞–Ω—Å—É.")
@in_allowed_channel_balance()
async def addbalance(interaction: discord.Interaction, amount: int, reason: str = "–ù–µ—Ç –ø—Ä–∏—á–∏–Ω—ã"):
    global balance
    balance += amount
    updatejson()
    embed = discord.Embed(title='–ü–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                          description=f'{interaction.user.mention} –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ {amount}$. \n'
                                      f'–ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {balance}$. \n'
                                      f'–ü—Ä–∏—á–∏–Ω–∞: {reason}',
                          color=discord.Color.green())
    await interaction.response.send_message(embed=embed)


# –°–Ω—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∞–ª–∞–Ω—Å–∞
@bot.tree.command(name="removebalance", description="–°–Ω—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∞–ª–∞–Ω—Å–∞.")
@in_allowed_channel_balance()
async def removebalance(interaction: discord.Interaction, amount: int, reason: str = "–ù–µ—Ç –ø—Ä–∏—á–∏–Ω—ã"):
    global balance
    if amount > balance:
        embed = discord.Embed(title='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ',
                              description=f'–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance}$.',
                              color=discord.Color.red())
        await interaction.response.send_message(embed=embed)
    else:
        balance -= amount
        updatejson()
        embed = discord.Embed(title='–°–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                              description=f'{interaction.user.mention} —Å–Ω—è–ª —Å–æ —Å—á—ë—Ç–∞ {amount}$. \n'
                                          f'–ü–æ—Å–ª–µ —Å–Ω—è—Ç–∏—è –±–∞–ª–∞–Ω—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {balance}$. \n'
                                          f'–ü—Ä–∏—á–∏–Ω–∞: {reason}',
                              color=discord.Color.yellow())
        await interaction.response.send_message(embed=embed)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –º–∞—à–∏–Ω –≤ —Å–ø–∏—Å–∫–µ
@bot.tree.command(name='add_car')
@is_admin()
@in_allowed_channel_auto()
async def add_car(interaction: discord.Interaction, car_name: str):
    if car_name not in cars:
        cars.append(car_name)
        updatejson()
        await interaction.response.send_message(f"–ê–≤—Ç–æ–º–æ–±–∏–ª—å {car_name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫.", ephemeral=True)
    else:
        await interaction.response.send_message(f"–ê–≤—Ç–æ–º–æ–±–∏–ª—å {car_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", ephemeral=True)


@bot.tree.command(name='remove_car')
@is_admin()
@in_allowed_channel_auto()
async def remove_car(interaction: discord.Interaction, car_name: str):
    global taken_cars
    if car_name in cars:
        cars.remove(car_name)
        taken_cars = {user: car for user, car in taken_cars.items() if car != car_name}
        updatejson()
        await interaction.response.send_message(f"–ê–≤—Ç–æ–º–æ–±–∏–ª—å {car_name} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞.", ephemeral=True)
    else:
        await interaction.response.send_message(f"–ê–≤—Ç–æ–º–æ–±–∏–ª—å {car_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)


# –ö–Ω–æ–ø–∫–∞ "–í–∑—è—Ç—å –∞–≤—Ç–æ"
class TakeCarButton(Button):
    def __init__(self):
        super().__init__(label="–í–∑—è—Ç—å –∞–≤—Ç–æ", style=discord.ButtonStyle.green)

    async def callback(self, interaction: discord.Interaction):
        available_cars = [car for car in cars if car not in taken_cars.values()]
        if available_cars:
            select = Select(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å", options=[
                discord.SelectOption(label=car) for car in available_cars
            ])

            async def select_callback(select_interaction: discord.Interaction):
                chosen_car = select_interaction.data['values'][0]
                taken_cars[select_interaction.user.id] = chosen_car
                updatejson()
                await select_interaction.response.send_message(f"–í—ã –≤–∑—è–ª–∏ {chosen_car}.", ephemeral=True)

            select.callback = select_callback
            view = View()
            view.add_item(select)
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å:", view=view, ephemeral=True)
        else:
            await interaction.response.send_message("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.", ephemeral=True)


# –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å –∞–≤—Ç–æ"
class ReturnCarButton(Button):
    def __init__(self):
        super().__init__(label="–í–µ—Ä–Ω—É—Ç—å –∞–≤—Ç–æ", style=discord.ButtonStyle.red)

    async def callback(self, interaction: discord.Interaction):
        global taken_cars  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        if interaction.user.id in taken_cars:
            returned_car = taken_cars.pop(interaction.user.id)
            updatejson()
            await interaction.response.send_message(f"–í—ã –≤–µ—Ä–Ω—É–ª–∏ {returned_car}.", ephemeral=True)
        else:
            await interaction.response.send_message("–í—ã –Ω–µ –±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.", ephemeral=True)


# –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π"
class ShowStatusButton(Button):
    def __init__(self):
        super().__init__(label="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π", style=discord.ButtonStyle.primary)

    async def callback(self, interaction: discord.Interaction):
        status_message = "–°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:\n"
        for car in cars:
            owner = next((user for user, taken_car in taken_cars.items() if taken_car == car), "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω")
            owner_name = f"‚ùå <@{owner}>" if owner != "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" else owner
            status_message += f"üöó {car}: {owner_name}\n"

        await interaction.response.send_message(status_message, ephemeral=True)


# –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def send_car_menu(channel):
    view = View(timeout=None)
    view.add_item(TakeCarButton())
    view.add_item(ReturnCarButton())
    view.add_item(ShowStatusButton())
    await channel.send("## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏", view=view)


bot.run(token)
